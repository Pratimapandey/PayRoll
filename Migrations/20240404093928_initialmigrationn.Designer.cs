// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayRollManagement.Data;

#nullable disable

namespace PayRollManagement.Migrations
{
    [DbContext(typeof(PayRollDbContext))]
    [Migration("20240404093928_initialmigrationn")]
    partial class initialmigrationn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PayRollManagement.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BaseSalaryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryDetail", b =>
                {
                    b.Property<int>("SalaryDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryDetailId"), 1L, 1);

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("SalaryDetailId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SalaryDetails");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryPayDeductionDetail", b =>
                {
                    b.Property<int>("SalaryPayDetailId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SalaryPayDeductionDetailEmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryPayDeductionDetailMonth")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryPayDeductionDetailSalaryPayDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryPayDeductionDetailYear")
                        .HasColumnType("int");

                    b.HasKey("SalaryPayDetailId", "EmployeeId", "Month", "Year");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SalaryPayDetailId")
                        .IsUnique();

                    b.HasIndex("SalaryPayDeductionDetailSalaryPayDetailId", "SalaryPayDeductionDetailEmployeeId", "SalaryPayDeductionDetailMonth", "SalaryPayDeductionDetailYear");

                    b.ToTable("SalaryPayDeductionDetails");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryPayDetail", b =>
                {
                    b.Property<int>("SalaryPayDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryPayDetailId"), 1L, 1);

                    b.Property<decimal>("DeductedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeductionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("SalaryPayDetailId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SalaryPayDetails");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryDetail", b =>
                {
                    b.HasOne("PayRollManagement.Model.Employee", "Employee")
                        .WithMany("SalaryDetails")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryPayDeductionDetail", b =>
                {
                    b.HasOne("PayRollManagement.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayRollManagement.Model.SalaryPayDetail", null)
                        .WithOne("SalaryPayDeductionDetail")
                        .HasForeignKey("PayRollManagement.Model.SalaryPayDeductionDetail", "SalaryPayDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayRollManagement.Model.SalaryPayDeductionDetail", null)
                        .WithMany("SalaryPayDeductionDetails")
                        .HasForeignKey("SalaryPayDeductionDetailSalaryPayDetailId", "SalaryPayDeductionDetailEmployeeId", "SalaryPayDeductionDetailMonth", "SalaryPayDeductionDetailYear");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryPayDetail", b =>
                {
                    b.HasOne("PayRollManagement.Model.Employee", null)
                        .WithMany("SalaryPayDetails")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("PayRollManagement.Model.Employee", b =>
                {
                    b.Navigation("SalaryDetails");

                    b.Navigation("SalaryPayDetails");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryPayDeductionDetail", b =>
                {
                    b.Navigation("SalaryPayDeductionDetails");
                });

            modelBuilder.Entity("PayRollManagement.Model.SalaryPayDetail", b =>
                {
                    b.Navigation("SalaryPayDeductionDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
